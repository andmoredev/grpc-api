AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  ECRStackName:
    Type: String
    Description: AWS CloudFormation stack name of the ECRStack
  DockerImageTag:
    Type: String
    Default: latest
    Description: Docker image tag to deploy

Resources:
  AppRunnerECRAccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: apprunner.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: ECRAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:DescribeImages
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                Resource: "*"

  AppRunnerService:
    Type: AWS::AppRunner::Service
    Properties:
      ServiceName: GrpcAppRunnerService
      SourceConfiguration:
        AuthenticationConfiguration:
          AccessRoleArn: !GetAtt AppRunnerECRAccessRole.Arn
        ImageRepository:
          ImageIdentifier: !Sub
            - "${ECRRepositoryUrl}:${DockerImageTag}"
            - ECRRepositoryUrl:
                Fn::ImportValue:
                  Fn::Sub: "${ECRStackName}-ECRRepositoryUrl"
          ImageRepositoryType: ECR
        AutoDeploymentsEnabled: true
      InstanceConfiguration:
        Cpu: '1 vCPU'
        Memory: '2 GB'
      HealthCheckConfiguration:
        Protocol: TCP
        Interval: 10
        Timeout: 5
        HealthyThreshold: 3
        UnhealthyThreshold: 3

Outputs:
  AppRunnerServiceUrl:
    Description: "App Runner gRPC Service URL"
    Value: !GetAtt AppRunnerService.ServiceUrl